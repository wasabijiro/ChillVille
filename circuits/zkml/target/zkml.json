{"noir_version":"0.31.0+540bef3597bd3e5775c83ec2ee3c0d4463084b4c","hash":9108546914879027729,"abi":{"parameters":[{"name":"inputs","type":{"kind":"array","length":6,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},"error_types":{}},"bytecode":"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","debug_symbols":"tdzdbtNKFAXgd8l1L2b/782rHB0dBShHlaoU0YKEKt6dFPCAPBgLedZdnEzWd2FtJcvj5Pn09vb1x///u7u8e3g8vfrn+XT/8Ob8dPdwuR49n/zbU4/vz5eXo8en84en0ytt6jen28vbl4fuX25O7+7ub68H+eVmWOwSP9a6ya9L/705BTQ9oekFTad2PN5piY9YxxM2nrHxgo3Xw/HR9Mfa4LaON2y8Y+MDGs/HhzbClviidXxB46Vh4wkarxtTW8vpUiL9c3zpsrZ8fWpVsPGKjTdsvB+P91ziU9fxgY1PbHxB460djqdGy+cJNV5/oBihAUYDAgZcJwDJHahcA4YGHA0EGIjfTzEpd8B5B2DrAPsAFBjIhgYIDfAEILwDxWtA0ICiAUMDfhwQqgUQsTUQaCDRQIEBahNGWaotwvWb8SAQXGC4IGhhowxTf5MytR3BvAsWo2BwweFCwIWcIOTyVYG8DcWeCi1wgwsEF/i44Bxd0OHKHwtcULhgaEEmzLTXUgopSAch4ELChUILG+WZJbtguSNkL+eUOQoEFxguCFzQCUL1ZlItB8HggsOFgAt5XCixLhgNQqEFb3CB0EIcn2lubWmJ3JgHQeCCwgVDCxtlmrPvWUjb2bNg6m2dqUYh4ELChUIL1Y4L11O9CExDQymCCwwXBC7oBEGlC1aDYHDB4UKABW4TZlpoaYosMuxkt0IL1OACoYWNPi3SdzXEdnY1WHtjZ2ujIHBB4YLBBT8uWMsusA5CwIWEC4UWNm4h+TvBqAseg0BwgeGCoAWdMNPOS1NklxwEgwsOFwItbPRp6RvZqm1nh4OjN3bONgqFFjb69EyB4AIfF5J6Q0nhQRC4oHDB4IJPEKy6EDYIARcSLhRayAkzXdKbYqkPAsEFhguCFjb6tPY3qdrODodQb+xCNAoGFxwuBFzICQJrF3RoKFVgQTbuOZkpEFzgCYJHF1IGQeCCwgVDCzRhpn9ehhc2HYSACwkXCi1s9GmNvsOhtbPDIdobuyiPAsEFhgsCF3SCINwFzUEwuOBwIeBCThD6j4hExx8pbdxzMlHQBhcILWzc62C9/KnHnlDWhYpRCLiQcKHQwsa1mZkCwQWGCwIXFC4YXIDPtMNn2uEz7fCZjikzrT8FHwSCCwwXBCpcDz6dP9ydX9/fvvyTxMtrHy9vlj+WuB4+fX7//ZXr2q8=","file_map":{"48":{"source":"// 量子化された決定木モデルを使って、6つの入力値に基づいて最終的なスコアを計算する仕組み\n// 各決定木は、条件に基づいて異なるスコアを返し、そのスコアが最終的な予測結果としてまとめられる\n\n// Code generated from Python2Noir\n// inputs quantization scale reciprocal: 255\n// inputs quantization zero-point: 0\n// quantize_type: uint8\nuse dep::std::println;\nmod quantize_arithmetic;\n\n// 特定の決定木のモデルに基づいて入力を分類し、特定の数値（クラスのスコア）を返す\nfn trees0class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t109\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t146\n\t\t\t} else {\n\t\t\t\t181\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t179\n\t\t} else {\n\t\t\t216\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n}\n\nfn trees1class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t114\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t140\n\t\t\t} else {\n\t\t\t\t166\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t165\n\t\t} else {\n\t\t\t191\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees2class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t118\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t136\n\t\t\t} else {\n\t\t\t\t155\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t155\n\t\t} else {\n\t\t\t173\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees3class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t120\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t134\n\t\t\t} else {\n\t\t\t\t147\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t147\n\t\t} else {\n\t\t\t160\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees4class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t122\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t132\n\t\t\t} else {\n\t\t\t\t141\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t142\n\t\t} else {\n\t\t\t151\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees5class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t124\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t130\n\t\t\t} else {\n\t\t\t\t137\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t138\n\t\t} else {\n\t\t\t144\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees6class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t125\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t129\n\t\t\t} else {\n\t\t\t\t134\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t135\n\t\t} else {\n\t\t\t140\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees7class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t125\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t129\n\t\t\t} else {\n\t\t\t\t132\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t133\n\t\t} else {\n\t\t\t136\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees8class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t126\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t128\n\t\t\t} else {\n\t\t\t\t131\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif inputs[3] <= 128 {\n\t\t\t131\n\t\t} else {\n\t\t\t134\n\t\t}\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\nfn trees9class0(inputs : [u32;6],) -> pub u32 {\n\tif inputs[1] <= 128 {\n\t\tif inputs[3] <= 128 {\n\t\t\t126\n\t\t} else {\n\t\t\tif inputs[0] <= 104 {\n\t\t\t\t128\n\t\t\t} else {\n\t\t\t\t130\n\t\t\t}\n\t\t}\n\t} else {\n\t\t131\n\t}\n\t// inputs quantization scale reciprocal: 128, zero-point: 127\n\t\n}\n\n// クラスのスコアを合計し、最終的なスコアを計算\nfn count_prob<N>(class_prob : [u32;N],) -> pub u32 {\n\tlet mut cls: Field = class_prob[0] as Field;\n\tfor i in 1..N { \n\t\tcls = quantize_arithmetic::add(cls,127,128,class_prob[i] as Field,127,128,127,128);\n\t}\n\tcls = quantize_arithmetic::mul(cls,127,128,1,0,1,125,13);\n\t((cls*128) as u32)/128\n}\n\nfn main(inputs : [u32;6],) -> pub u32 {\n\tlet trees0_class0: u32 = trees0class0(inputs);\n\tlet trees1_class0: u32 = trees1class0(inputs);\n\tlet trees2_class0: u32 = trees2class0(inputs);\n\tlet trees3_class0: u32 = trees3class0(inputs);\n\tlet trees4_class0: u32 = trees4class0(inputs);\n\tlet trees5_class0: u32 = trees5class0(inputs);\n\tlet trees6_class0: u32 = trees6class0(inputs);\n\tlet trees7_class0: u32 = trees7class0(inputs);\n\tlet trees8_class0: u32 = trees8class0(inputs);\n\tlet trees9_class0: u32 = trees9class0(inputs);\n\tlet res: u32 = count_prob([trees0_class0, trees1_class0, trees2_class0, trees3_class0, trees4_class0, trees5_class0, trees6_class0, trees7_class0, trees8_class0, trees9_class0]);\n\tres\n}\n","path":"/Users/wasabi/wasabi/dev/hack/ETH_Tokyo_2024/pre_ETH_Tokyo_2024/circuits/zkml/src/main.nr"}},"names":["main"]}